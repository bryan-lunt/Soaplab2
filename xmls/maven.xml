<!-- ================================================================== -->
<!--                            Maven                                   -->
<!-- ================================================================== -->

<!-- This is an XML entity included in ../build.xml file -->
<!-- $Id: maven.xml,v 1.15 2010/08/10 09:23:34 marsenger Exp $ -->

<!-- 

It contains general Maven-related stuff which usually stays unchanged
for all projects. All project specific dependencies are expected to be
in file xmls/project.pom.

The optional other files (project-*.pom) contain dependencies of
project parts: one file per one jar file created by this
project). They are used for uploading jar files to the Maven
repositories - the uploading tasks are in file upload2maven.xml.

-->

<!-- for uploading to a maven repository -->
<property name="bio.maven.repository.scp" value="scp://biomoby.org/home/websites/biomoby.org/html/m2repo/"/>
<property name="bio.maven.auth.username"  value="${user.name}"/>
<property name="bio.maven.auth.privkey"   value="${user.home}/.ssh/id_rsa"/>

<!-- what Maven-Ant library is needed -->
<property name="old.maven.ant.file" value="maven-ant-tasks-2.0.8.jar"/>
<property name="maven.ant.file" value="maven-ant-tasks-2.0.9.jar"/>

<!-- project dependency files -->
<property name="project.deps.file"  location="${basedir}/xmls/project.pom"/>
<property name="taverna-client.deps.file"  location="${basedir}/xmls/taverna-client.pom"/>

<!-- ================================================================== -->
<!--      Bootstrap - a task getting here the Maven-Ant library         -->
<!-- ================================================================== -->
<target name="bootstrap"
  description="Fetch Maven library - needed only the first time.">

  <!-- where is Maven-Ant library -->
  <property name="maven.ant.dir" value="http://biomoby.org/jmoby-jars"/>

  <!-- get it -->
  <get
    src="${maven.ant.dir}/${maven.ant.file}"
    dest="${lib.dir}/${maven.ant.file}"
    verbose="true"
    usetimestamp="true"/>
  
  <!-- remove the old one (if exists) -->
  <delete file="${lib.dir}/${old.maven.ant.file}" quiet="true"/>

</target>

<!-- ================================================================== -->
<!--      Check if we have already fetched Maven-Ant library            -->
<!-- ================================================================== -->
<target name="checkmaven">

  <condition property="maven.lib.present">
    <available file="${lib.dir}/${maven.ant.file}"/>
  </condition>
  <fail unless="maven.lib.present">Sorry...
    Missing Maven library. It can be fetched from the Internet.
    Type: ant bootstrap
    This is needed to be done only once.
  </fail>

</target>

<!-- ================================================================== -->
<!--                     Initialize Maven tasks                         -->
<!-- ================================================================== -->
<target name="initmaven" depends="checkmaven">

  <typedef
    resource="org/apache/maven/artifact/ant/antlib.xml"
    uri="urn:maven-artifact-ant">
    <classpath>
      <pathelement location="${lib.dir}/${maven.ant.file}" />
    </classpath>
  </typedef>

  <!-- ADD or REMOVE lines here, depending on your project[-*].pom files -->
  <artifact:pom id="maven.project" file="${project.deps.file}"/>

  <!-- These are dependencies needed to the whole project:
       To compile and to add correct CLASSPATH into run-time scripts -->
  <artifact:dependencies
    pathId="dependency.classpath"
    filesetId="dependency.fileset">
    <pom refid="maven.project"/>
  </artifact:dependencies>

  <!-- subset of the same dependencies - needed for web deployment -->
  <artifact:dependencies
    filesetId="runtime.dependency.fileset"
    useScope="runtime">
    <pom refid="maven.project"/>
  </artifact:dependencies>

  <!-- how to deploy -->
  <property name="bio.maven.install.provider" value="wagon-ssh"/>

</target>

<!-- ================================================================== -->
<!-- Copying project dependecies files - used with eclipse maven plugin -->
<!-- ================================================================== -->
<target name="initeclipse" depends="init"
  description="For Eclipse users... create pom files in the right place">

  <loadfile
    property="pom.root.insert"
    srcFile="${src.config}/pom.root.template"
    failonerror="yes"/>

  <!-- @FOR_ECLIPSE@ -->
  <copy file="${project.deps.file}" tofile="pom.xml">
    <filterset begintoken="&lt;!-- @" endtoken="@ --&gt;">
      <filter token="FOR_ECLIPSE" value="${pom.root.insert}"/>
    </filterset>
  </copy>

  <copy file="${src.config}/pom.src.main.template" tofile="${src.main}/pom.xml">
    <filterchain>
      <expandproperties/>
    </filterchain>
  </copy>

  <copy file="${src.config}/pom.src.plugins.template" tofile="${src.plugins}/pom.xml">
    <filterchain>
      <expandproperties/>
    </filterchain>
  </copy>


</target>
