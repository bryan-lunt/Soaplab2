appl: dot [
  documentation: "Draw directed graphs as hierarchies"
  groups: "Graphics"
  nonemboss: "Y"
  supplier: "Eleftherios Koutsofios and Stephen North"
  version: "1.9"
]

infile: library  [
  additional: "Y"
  information: "A custom  PostScript  library file"
  qualifier: "l"
]

list: format  [
  additional: "Y"
  default: "png"
  comment: "defaults"    # because we want different default than 'dot' program
  values: "canon; dot; fig; gd; gif; hpgl; imap; jpg; mif; mp; pcl; pic; plain; png; ps; ps2; svg; vrml; vtx; wbmp"
  delimiter: ";"
  prompt: "Output format"
  min: 1
  max: 1
#  qualifier: "T"
  comment: "method -T$$"        # ... this achieves the same as the line above
#  comment: "method -T ${format}" # ... this achieves the same as the line above
]

bool: v  [
  additional: "Y"
  information: "Verbose output"
]

# the 'extension' works but it may be confusing
# if the wanted format is different; the best
# would be (TBD) to use: extension: ${format}

infile: dotfile  [
  parameter: "Y"
  information: "An input file with a graph definition in DOT language"
  help: "http://www.research.att.com/sw/tools/graphviz/"
]

outfile: resultgraph  [
  prompt: "Textual or graphical output with a graph"
  comment: bindata
  default: "stdout"
  extension: "png"

# ...or achieve the same by using
#    (because 'dot' can either write to stdout, or to a file
#     assign by the '-o' argument):
#  qualifier: "o"

]
